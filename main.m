
%  Student psychology based optimization (SPBO)algorithm 
%  Source codes demo version 1.0                                                                      
%  Developed in MATLAB R2017b                                                                  
                                                                                             

% fobj = @Objective function
% variable = number of your variables
% Max_iteration = maximum number of iterations
% student = number of search agents
% mini=[mini1,mini2,...,minin] where mini is the lower bound of variable n
% maxi=[maxi1,maxi2,...,maxin] where maxi is the upper bound of variable n
% If all the variables have equal lower bound you can just
% define mini and maxi as two single numbers

% To run SPBO: [Best_fitness,Best_student,Convergence_curve]=SPBO(student,Max_iteration,mini,maxi,variable,fobj)
%______________________________________________________________________________________________





clear all 
clc
tic
Demand=[3817.8];	
    %4072.32	4242	4454.1	4666.2	4878.3	5514.6	5938.8	4920.72	6150.9	6363	6575.1	5090.4	4751.04	4369.26];%30bus data
% Demand=[1650 1680 1680 1700 1700 1700 2000 2000 2500 2500 2700 2800 2900 3000 3000 3000 3000 2800 2500 2000 1800 1750 1700 1700];
% Demand=[1650 1680 1680 1700 1700 1700 1988.61 1979.1 2437.1 2417 2586.7 2684.5 2713.9 2861.9 2870.9 2932.9 2971 3000 2500 2000 1800 1750 1700 1700];%with solar
%Demand=[1459.7 1489.7 1489.7 1509.7 1509.7 1511.92 1811.92 1814.17 2318.7 2323.17 2525.417 2635.584 2736.7 2838.7 2836.7 2832.17 2825.417 2620.917 2316.417 1811.92 1611.92 1561.92 1509.7 1509.7];%eith wind
% Demand=[1459.7 1489.7 1489.7 1509.7 1509.7 1511.92 1800.53 1793.27 2255.8 2240.17 2414.12 2520.09 2550.6 2700.82 2707.6 2760.1 2796.42 2620.91 2316.41 1811.2 1611.92 1561.92 1509.7 1509.7];%With RES 
% PV=[0 0 0 0 0 0 11.39 20.9 62.9 83 111.3 115.3 186.1 138.1 129.1 67.1 29 0 0 0 0 0 0 0];
%WT=[190.3 190.3 190.3 190.3 190.3 188.08 188.08 185.83 181.3 176.83 181.3 176.83 174.583 164.416 163.3 167.83 174.583 179.083 183.583 188.08 188.08 188.08 190.3 190.3]; 
% Demand=[140 150 155 160 165 170 175 180 210 230 240 250 240 220 200 180 170 185 200 240 225 190 160 145]; %for without RES
% Demand=[140.0000  150.0000  155.0000  160.0000  165.0000  169.9700  168.7300  163.8200  185.9500  190.6300  232.5900 246.3500  208.0600  193.1900  189.9200  174.7000  160.4300  182.6900  200.0000  240.0000  225.0000  190.0000 160.0000  145.0000];% for case-2 with Diesal and Solar
% Demand=[138.3 141.5 145.73 143.34 157.8 165.1 160.34 154.44 189.42 212.15 227.20 231.35 225.65 209.65 191.74 166.29 166.56 183.13 199.25 239.83 224.85 189.69 158.93 144.42];%With WIND
%  Demand=[138.3 141.5 145.73 143.34 157.78 165.06 154.07 138.26 165.37 172.78 219.79 227.7 193.71 182.84 181.66 160.99 156.99 180.82 199.25 239.83 224.85 189.69 158.93 144.42];% for case-2 with RES
%  PV=[0 0 0 0 0 0.03 6.27 16.18 24.05 39.37 7.41 3.65 31.94 26.81 10.08 5.3 9.57 2.31 0 0 0 0 0 0];
%  WT=[1.7 8.5 9.27 16.66 7.22 4.91 14.66 25.56 20.58 17.85 12.8 18.65 14.35 10.35 8.26 13.71 3.44 1.87 0.75 0.17 0.15 0.31 1.07 0.58];  
for aa=1:length(Demand)
global data Pd data1
data=[
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.022222	0	550
0	20	0.117647	0	185
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.045455	0	320
0	20	0.031847	0	414
0	40	0.01	0	100
0	20	1.42857	0	107
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.526316	0	119
0	20	0.04902	0	304
0	20	0.208333	0	148
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.064516	0	255
0	20	0.0625	0	260
0	40	0.01	0	100
0	20	0.025575	0	491
0	20	0.02551	0	492
0	20	0.019365	0	805.2
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.020964	0	577
0	40	0.01	0	100
0	20	2.5	0	104
0	20	0.016475	0	707
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.039683	0	352
0	20	0.25	0	140
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100
0	20	0.277778	0	136
0	40	0.01	0	100
0	40	0.01	0	100
0	40	0.01	0	100

];
% data= [0.000299,10.1,671,150,455;
%        0.000183,10.2,574,150,455;
%        0.001126,8.8,374,20,130;
%        0.001126,8.8,374,20,130;
%        0.000205,10.4,461,150,470;
%        0.000301,10.1,630,135,460;
%        0.000364,9.8,548,135,465;
%        0.000338,11.2,227,60,300;
%        0.000807,11.2,173,25,162;
%        0.001203,10.7,175,25,160;
%        0.003586,10.2,186,20,80;
%        0.005513,9.9,230,20,80;
%        0.000371,13.1,225,25,85;
%        0.001929,12.1,309,15,55;
%        0.004447,12.4,323,15,55];
% data1=[0.0296,-4.18,300,150,455;
%        0.0512,-3.34,520,150,455;
%        0.0496,-3.55,510,20,130;
%        0.0496,-3.55,510,20,130;
%        0.0151,-2.68,220,150,470;
%        0.0151,-2.66,222,135,460;
%        0.0151,-2.68,220,135,465;
%        0.0151,-2.68,220,60,300;
%        0.0145,-2.22,290,25,162;
%        0.0145,-2.22,285,25,160;
%        0.0138,-2.26,295,20,80;
%        0.0138,-2.26,295,20,80;
%        0.0132,-2.42,310,25,85;
%        0.0132,-2.42,310,15,55,
%        1.842,-1.11,360,15,55];
% data=  [0.0024,21,1530,37,300;  %Econimic Dispatch
%           0.0029,20.16,992,40,250;
%           0.021,20.4,600,50,150];
%  
% data1=  [0.0105,-1.355,60,37,300;%Emission Dispatch
%           0.008,-0.6,45,40,250;
%           0.012,-0.555,90,50,150];
% data=  [0.15247,38.53973,756.79886,10,125;  %Econimic Dispatch
%         0.10587,46.15916,451.32513,10,150;
%         0.02803,40.39655,1049.9977,15,225
%         0.03546,38.30553,1243.5311,20,210
%         0.02111,36.32782,1658.5696,25,325
%         0.01799,38.27041,1356.6592,25,315];
% 
% data1=  [0.00419,0.32767,13.85932,10,125;%Emission Dispatch
%          0.00419,0.32767,13.85932,10,150;
%          0.00683,-0.54551,40.26690,15,225;
%          0.00683,-0.54551,40.26690,20,210;
%          0.00461,-0.51116,42.8955,25,325;
%          0.00461,-0.51116,42.8955,25,315];
% data=  [0.15247,38.53973,756.79886,10,100;  %Econimic Dispatch
%         0.10587,46.15916,451.32513,10,110;
%         0.02803,40.39655,1049.9977,15,90;
%         0.03546,38.30553,1243.5311,11,95;
%         0.02111,36.32782,1658.5696,10,75;
%         0.01799,38.27041,1356.6592,15,80;
%         0.02803,40.39655,1049.9977,5,50;
%         0.0024,21,1530,20,100;  
%         0.0029,20.16,992,15,80;
%         0.021,20.4,600,20,100];
% 
% data1=  [0.00419,0.32767,13.85932,10,100;%Emission Dispatch
%          0.00419,0.32767,13.85932,10,110;
%          0.00683,-0.54551,40.26690,15,90;
%          0.00683,-0.54551,40.26690,11,95;
%          0.00461,-0.51116,42.8955,10,75;
%          0.00461,-0.51116,42.8955,15,80;
%           0.00683,-0.54551,40.26690,5,50;
%          0.0105,-1.355,60,20,100;
%          0.008,-0.6,45,10,80;
%          0.012,-0.555,90,100,100];

Time=aa
% Demand (KW)
disp('The Power Demand');
Pd=Demand(aa)
LB =data(:,4)';   % Lower bound
UB = data(:,5)';  % Upper bound

nVar=3
student=20; % Number of student (population)

Function_name='ceed'; % Name of the test function that can be from F1 to F23 

Max_iteration=100; % Maximum number of iterations

% Load details of the selected benchmark function
[lb,ub,dim,fobj]=Get_Functions_details(Function_name);

%Solution obtained using SPBO
[Best_fitness,Best_student,Convergence_curve]=SPBO(student,Max_iteration,ub,lb,dim,fobj);
bestX = Best_student;
% Converging Curve
% figure (aa)
% plot (Convergence_curve);
% title('Convergence curve')
% xlabel('Iteration');
% ylabel('Fitness of best student so far');
% %axis tight
% grid on
% box on
% legend('SPBO')
% 
n=length(data(:,1));
disp('The Power Generation obtained by SPBO');
PG=bestX
P1=bestX(1);
P2=bestX(2);
P3=bestX(3);
P4=bestX(4);
P5=bestX(5);
P6=bestX(6);
% P7=bestX(7);
% P8=bestX(8);
% P9=bestX(9);
% P10=bestX(10);
%P11=bestX(11);
%P12=bestX(12);
%P13=bestX(13);
%P14=bestX(14);
%P15=bestX(15);
for i=1:n
      F1(i)=data(i,1)* PG(i)^2+data(i,2)*PG(i)+data(i,3);
%       E1(i)=data1(i,1)* PG(i)^2+data1(i,2)*PG(i)+data1(i,3);
%       F1min(i)=data(i,1)*data(i,4)^2+data(i,2)*data(i,4)+data(i,3);
%       E1max(i)=data1(i,1)*data1(i,5)^2+data1(i,2)*data1(i,5)+data1(i,3);
%       h(i)=F1min(i)/E1max(i);
      ceed(i)=F1(i);%for Economic Dispatch
%       ceed(i)=E1(i);%for Emission Dispatch
%       ceed(i)=F1(i)+h(i)*E1(i);%For CEED
      
end
lam=abs(sum(P1)-Pd);
disp('The Total Fuelcost found by SPBO is : ');
 o=sum(ceed)

% o=sum(ceed)+0.1095*10^3*PV(aa)%Without Wind
 %o=sum(ceed)+0.1368*10^3*WT(aa);
 %  o=sum(ceed)+0.1095*10^3*PV(aa)+0.1368*10^3*WT(aa);%With RES


Final(aa,:)=[ aa Pd PG o];

end
disp('.....Time      Demand     P1        P2      P3      P4       P5       P6    Fuelcost......... ');
Final
total_cost=sum(Final(:,9))

display(['The best solution obtained by SPBO is : ', num2str(Best_student)]);
display(['The best optimal value of the objective funciton found by SPBO is : ', num2str(Best_fitness)]);